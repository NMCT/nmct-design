/*
    Components: Media
*/

.c-media {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    transition: all $animation-duration-beta $animation-easing-alpha;
    width: 100%;
    @include margin-bottom($alpha-leading);
}

.c-media--link {
    &:hover,
    &:focus {
        text-decoration: none;
    }
}

    .c-media__body {
        flex-grow: 1;
        background-color: palette(color-neutral,xxxxx-light);
    }

    .c-media__content {
        margin-top: auto;
        overflow: hidden;
    }

    .c-media__image-link {
        display: block;
    }

    .c-media__intro {
        color: $body-color;
    }

    .c-media__title {
        width: 100%;
        //white-space: nowrap;
        //overflow: hidden;
        //text-overflow: ellipsis;
        //font-family: $alpha-font-family;
        transition: color $animation-duration-alpha $animation-easing-alpha;
        @include ms0;

        .c-media--link &,
        .c-media--link:visited & {
            color: palette(color-neutral,xxxx-dark);
        }

        .c-media--link:hover &,
        .c-media--link:focus & {
            //text-decoration: underline;
            color: $link-color;
        }
    }

    .c-media__image {
        //flex-grow: 1;
        //flex-basis: 0;
        display: flex;
        align-items: flex-end;
        background-color: palette(color-neutral,xxx-light);
        //background-color: palette(color-beta,x-light);
        //background-image: linear-gradient(top left, palette(color-neutral,xxxx-light),palette(color-neutral,xxx-light));
        //background-size: cover;
        //background-position: 50% 50%;
        //height: $alpha-line-height * 12rem;
        //
        //@include mq(bp4) {
        //    height: $alpha-line-height * 8rem;
        //}
        //
        //@include mq(bp5) {
        //    height: $alpha-line-height * 10rem;
        //}
        //
        //@include mq(bp6) {
        //    height: $alpha-line-height * 12rem;
        //}

        img {
            transform: translateX(0) translateY(0);
            will-change: transform,opacity;
            transition: all $animation-duration-alpha $animation-easing-alpha;
            //opacity: 0;

            .c-media--link:hover & {
                transform: translateX(-#{$alpha-leading * .25}px) translateY(-#{$alpha-leading * .25}px);
                //opacity: .9;
            }
        }
    }
