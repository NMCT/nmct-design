/*
    Components: Row
    ---
    Creates a horizontal row with padding
*/

.c-row {
    // position: relative;
    background-color: palette(color-neutral, xxxxx-light);
    z-index: 10;
    @include clearfix;
    @include padding-lr($columns-gutter,$columns-gutter);
    @include padding-tb($alpha-leading * 2,$alpha-leading * 1);

    @include mq(bp3) {
        @include padding-lr($columns-gutter * 2,$columns-gutter * 2);
    }
}

.c-row--lg {
    @include mq(bp4) {
        @include padding-tb($alpha-leading * 4,$alpha-leading * 3);
    }
}

.c-row--xl {
    @include mq(bp3) {
        @include padding-tb($alpha-leading * 4,$alpha-leading * 3);
    }

    @include mq(bp6) {
        @include padding-tb($alpha-leading * 6,$alpha-leading * 5);
    }
}

.c-row--alpha {
    background-color: palette(color-alpha);
    color: palette(color-neutral,xxxxx-light);
}

.c-row--beta {
    background-color: palette(color-neutral,xxxx-dark);
    color: palette(color-neutral,xxxxx-light);
}

.c-row--gamma {
    color: palette(color-neutral, xxxxx-light);
    background: palette(color-neutral,xx-dark);
}

.c-row--divide {
    border-top: 1px solid palette(color-neutral,xxx-light);
}

.c-row--top {
    background-color: palette(color-neutral, xx-dark);
    @include padding-tb($alpha-leading * .5, $alpha-leading * .5);
}

.c-row--header {
    background-color: palette(color-alpha);
    z-index: 20;
    @include padding-tb($alpha-leading,$alpha-leading);

    @include mq(bp3) {
        @include padding-tb($alpha-leading * 2,$alpha-leading * 2);
    }

    // .o-container {
    //     max-width: none;
    // }
}

.c-row--intro {
    background-color: palette(color-alpha);
    color: palette(color-neutral,xxxxx-light);
    // @include padding-tb($alpha-leading * 2,$alpha-leading);
    @include padding-bottom($alpha-leading);

    @include mq(bp3) {
        // @include padding-tb($alpha-leading * 2,$alpha-leading * 1);
        @include padding-bottom($alpha-leading);
    }

    @include mq(bp4) {
        // @include padding-tb($alpha-leading * 2,$alpha-leading * 1);
        @include padding-bottom($alpha-leading);
    }

    @include mq(bp5) {
        // @include padding-tb($alpha-leading * 4,$alpha-leading * 3);
        @include padding-bottom($alpha-leading * 3);
    }
}

.c-row--visual {
    background: palette(color-alpha) url('../../img/svg/background-visual-top.svg') bottom center no-repeat;
    background-size: 110%;

    @include mq(bp5) {
        background-size: auto;
    }
}

.c-row--full {
    // min-height: calc(100vh - #{$alpha-leading * 11}px);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    // justify-content: center;
}

.c-row--footer {
    border-top: 1px solid palette(color-neutral,xxx-light);
    border-bottom: $alpha-leading * .25px solid palette(color-alpha);
}

.c-row--map {
    @include padding-lr( 0 );
    @include padding-tb( 0 );
}

.c-row--carousel {
    overflow: hidden;
    box-sizing: content-box;
}

.c-row--clear {
    padding: 0;
}

.c-row--clear-top {
    padding-top: 0;
}

.c-row--clear-bottom {
    padding-bottom: 0;
}
